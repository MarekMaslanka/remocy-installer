name: Build All

on: [push]

env:
  APPLICATION_NAME: lunremote
  APPLICATION_VERSION: 0.7.0

jobs:
  tst:
    name: 'size test'
    runs-on: ubuntu-latest
    steps:
      - name: 'size'
        run: |
          size=`du -k ./ | tail -n 1 | cut -f 1`
          echo $size
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Windows Latest x64", artifact: "Windows-x64.zip",
            os: windows-latest,
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Linux Latest x64", artifact: "Linux-x64.tar.gz",
            os: ubuntu-latest
          }
#         - {
#             name: "macOS Latest x64", artifact: "macOS-x64.zip",
#             os: macos-latest
#           }

    steps:
    - name: Checkout installer
      uses: actions/checkout@v2
      with:
        path: installer
    
    - name: Replace size
      if: matrix.config.os == 'ubuntu-latest'
      run: |
        size=`du -k ./installer | tail -n 1 | cut -f 1`
        echo $size
        sed -i 's/1024/$size/g' installer/lunremote/DEBIAN/control
        cat installer/lunremote/DEBIAN/control

    - name: Installing system libs
      shell: cmake -P {0}
      run: |
        if ("${{ runner.os }}" STREQUAL "Windows")
          file(DOWNLOAD "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip" wix311-binaries.zip)
          file(ARCHIVE_EXTRACT INPUT wix311-binaries.zip DESTINATION wix)
        endif()

    - name: Build MSI installer
      if: matrix.config.os == 'windows-latest'
      run: |
        cd installer
        ../wix/candle.exe -arch x64 -ext WixUtilExtension -ext WixFirewallExtension lunremote.wxs Custom_InstallDir.wxs Custom_InstallDirDlg.wxs
        ../wix/light.exe -ext WixUIExtension -ext WixUtilExtension -ext WixFirewallExtension lunremote.wixobj Custom_InstallDir.wixobj Custom_InstallDirDlg.wixobj -out lunremote.msi

    - uses: actions/upload-artifact@v1
      if: startsWith(matrix.config.os, 'windows')
      id: upload_win_msi_installer
      with:
        path: ./installer/lunremote.msi
        name: lunremote.msi

  deploy:
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
        - {
            name: "Windows Latest x64", artifact: "Windows-x64.zip",
            os: windows-latest
          }
#         - {
#             name: "Linux Latest x64", artifact: "Linux-x64.tar.gz",
#             os: ubuntu-latest
#           }
#         - {
#             name: "macOS Latest x64", artifact: "macOS-x64.zip",
#             os: macos-latest
#           }
    needs: build

    steps:
    - name: Download Win MSI installer
      uses: actions/download-artifact@v1
      with:
        name: lunremote.msi
        path: ./

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Deploy Win MSI Installer
      id: msi_upload_to_release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./lunremote.msi
        asset_name: lunremote.msi
        asset_content_type: application/msi
